#include <Arduino_LSM9DS1.h>
#include <ros.h>
#include <std_msgs/Float32MultiArray.h>

ros::NodeHandle nh;
std_msgs::Float32MultiArray imu_msg;
ros::Publisher pub("data_imu",&imu_msg);

void setup() {
//  Serial.begin(9600);
  if (!IMU.begin()) { //LSM6DS3센서 시작
//    Serial.println("LSM6DS3센서 오류!");
    while (1);
  }

  nh.initNode();
  nh.advertise(pub);
}

float accel_x, accel_y, accel_z;
float gyro_x, gyro_y, gyro_z;
float mag_x, mag_y, mag_z;

void loop() {

  float data[9] ={0};
  int data_size=sizeof(data)/sizeof(float);

  imu_msg.data_length=data_size;

  //가속도센서
  if (IMU.accelerationAvailable()) {
    IMU.readAcceleration(accel_x, accel_y, accel_z);
    data[0]=accel_x;
    data[1]=accel_y;
    data[2]=accel_z;
//    Serial.print("가속도 센서 = ");
//    Serial.print(accel_x);
//    Serial.print(", ");
//    Serial.print(accel_y);
//    Serial.print(", ");
//    Serial.println(accel_z);
  }

   //자이로센서
  if (IMU.gyroscopeAvailable()) {
    IMU.readGyroscope(gyro_x, gyro_y, gyro_z);
    data[3]=gyro_x;
    data[4]=gyro_y;
    data[5]=gyro_z;
//    Serial.print("자이로 센서 = ");
//    Serial.print(gyro_x);
//    Serial.print(", ");
//    Serial.print(gyro_y);
//    Serial.print(", ");
//    Serial.println(gyro_z);
  }

   //지자계센서
  if (IMU.magneticFieldAvailable()) {
    IMU.readMagneticField(mag_x, mag_y, mag_z);
    data[6]=mag_x;
    data[7]=mag_y;
    data[8]=mag_z;
//    Serial.print("지자계 센서 = ");
//    Serial.print(mag_x);
//    Serial.print(", ");
//    Serial.print(mag_y);
//    Serial.print(", ");
//    Serial.println(mag_z);
  }

//  imu_msg.push_back(accel_x);
//  imu_msg.push_back(accel_y);
//  imu_msg.push_back(accel_z);
//  imu_msg.push_back(gyro_x);
//  imu_msg.push_back(gyro_y);
//  imu_msg.push_back(gyro_z);
//  imu_msg.push_back(mag_x);
//  imu_msg.push_back(mag_y);
//  imu_msg.push_back(mag_z);
  imu_msg.data=data;

  pub.publish(&imu_msg);

//  imu_msg.data.clear();

  delay(100);
}
